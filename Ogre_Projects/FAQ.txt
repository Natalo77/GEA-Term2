What is Constructor() : OgreBites::ApplicationContext("WindowName"){}
	- everything past the : is the member initializer list, a feature of C++ constructors that can change initialized variables or use other constructors within the object BEFORE initialization.
		- In this case, the Constructor inherits from OgreBites::ApplicationContext, so Constructor is using the constructor for OgreBites::ApplicationContext(String name) instead of the default constructor.
		- This particular constructor sets the name of the window to "WindowName".
		
getRoot() won't work!
	- getRoot() is defined in <Bites/OgreTrays.h>
	
SceneManager->getRootSceneNode() won't work!
	- getRootSceneNode() is Defined in <Ogre.h>
	
Everything broke when I added in my main function.
	- 1. THIS IS WRONG.
		int main(int argc, char *argv[])
		{
			//Scenes are GO!
			///Create an instance of our ogre3D application. -> then initialise it -> then ask the 'rootNode' to start rendering things. -> then close the app once it's done.
			Ogre3DApplication app;
			app.initApp();
			app.getRoot()->startRendering();
			app.closeApp();
			///obligatory return 0 just for fun.
			return 0;
		}
	- 2. USE THIS
		INT WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR cmdLine, INT) {
			int argc = __argc;
			char** argv = __argv;

			try
			{
				Ogre3DApplication app;

				app.initApp();
				app.getRoot()->startRendering();
				app.closeApp();

			}
			catch (Ogre::Exception& e)
			{
				MessageBoxA(NULL, e.getFullDescription().c_str(), "An exception has occurred!", MB_ICONERROR | MB_TASKMODAL);
			}
			return 0;
	- 3. PUT THIS AT THE TOP.
		#include <OGRE/OgrePlatform.h>

		#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
		#define WIN32_LEAN_AND_MEAN
		#include "windows.h"
		#include "OgreString.h"
		#elif OGRE_PLATFORM == OGRE_PLATFORM_APPLE_IOS
		#include "SampleBrowser_iOS.h"
		#elif OGRE_PLATFORM == OGRE_PLATFORM_ANDROID
		#include "SampleBrowser_Android.h"
		#endif

		#include "Ogre3DApplication.h"

		#ifdef NDEBUG
		#pragma comment(lib, "OgreMain.lib")
		#pragma comment(lib, "OgreBites.lib")
		#pragma comment(lib, "OgreRTShaderSystem.lib")
		#pragma comment(lib, "OgreOverlay.lib")
		#else
		#pragma comment(lib, "OgreMain_d.lib")
		#pragma comment(lib, "OgreBites_d.lib")
		#pragma comment(lib, "OgreRTShaderSystem_d.lib")
		#pragma comment(lib, "OgreOverlay_d.lib")
		#endif
